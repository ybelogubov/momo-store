include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'
  - template: Jobs/SAST.gitlab-ci.yml

variables:
  VERSION: 0.1.${CI_PIPELINE_ID}
  SAST_EXCLUDED_ANALYZERS: "gosec-sast"

stages:
   - build
   - test
   - deploy
   - helm-package

build:
  stage: build
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd frontend
    - >
      docker build
      --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/momo-store-frontend:$CI_COMMIT_SHORT_SHA
      .
    - docker push $CI_REGISTRY_IMAGE/momo-store-frontend:$CI_COMMIT_SHORT_SHA

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli
  script:
    - cd frontend
    - sonar-scanner
      -Dsonar.projectKey=${SONAR_FRONT_PRJ_KEY}
      -Dsonar.sources=.
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN_FRONT}

helm-package:
  stage: helm-package
  image:
    name: dtzar/helm-kubectl:3.10.3
  script:
    - sed -i "s/__TAG__/$CI_COMMIT_SHORT_SHA/" helm/momo-store-frontend-chart/values.yaml
    - sed -i "s/__CERT_ID__/$CERT_ID/" helm/momo-store-frontend-chart/values.yaml
    - sed -i "s/__ALB_INGRESS_EXTERNAL_IP__/$ALB_INGRESS_EXTERNAL_IP/" helm/momo-store-frontend-chart/values.yaml
    - sed -i "s/__K8S_SUBNET_ID__/$K8S_SUBNET_ID/" helm/momo-store-frontend-chart/values.yaml
    - sed -i "s/__VERSION__/$VERSION/" helm/momo-store-frontend-chart/Chart.yaml
    - helm package helm/momo-store-frontend-chart --version ${VERSION}
    - curl -u ${HELM_REPO_USER}:${HELM_REPO_PASS} ${HELM_REPO} --upload-file /builds/yu.belogubov/momo-store/momo-store-frontend-${VERSION}.tgz


#block describes deploy method by using kubectl - manifests being stored in the ./kubernetes/
#
#deploy:
#  image: gcr.io/cloud-builders/kubectl:latest
#  stage: deploy
#  script:
#    - kubectl config set-cluster k8s --server="$KUBE_URL" --insecure-skip-tls-verify=true
#    - kubectl config set-credentials admin --token="$KUBE_TOKEN"
#    - kubectl config set-context default --cluster=k8s --user=admin
#    - kubectl config use-context default
#    - sed -i "s/__VERSION__/$CI_COMMIT_SHORT_SHA/" kubernetes/frontend/deployment.yaml
#    - sed -i "s/__GITLAB_REGISTRY_K8S_KEY__/$GITLAB_REGISTRY_K8S_KEY/" kubernetes/frontend/deployment.yaml
#    - sed -i "s/__K8S_SUBNET_ID__/$K8S_SUBNET_ID/" kubernetes/frontend/deployment.yaml
#    - sed -i "s/__ALB_INGRESS_EXTERNAL_IP__/$ALB_INGRESS_EXTERNAL_IP/" kubernetes/frontend/deployment.yaml
#    - sed -i "s/__CERT_ID__/$CERT_ID/" kubernetes/frontend/deployment.yaml
#    - kubectl apply -f kubernetes/frontend/deployment.yaml
